COMPILING FOR WINDOWS
---------------------

1. Install CMake.

2. Install Boost (see www.boost.org). At minimum, include the filesystem, system and serialization modules. Set an environment variable BOOST_ROOT to the Boost install location.

3. Install RDKit (see http://rdkit.org/), including the InChI Extensions (python extensions are not required). Set the environment variable RDBASE to the RDKit install location (the directory with Code, lib etc..)..

4. Download and unzip a development version of LPSolve (e.g. lp_solve_5.5.2.0_dev_win32.zip - see https://sourceforge.net/projects/lpsolve). Set the environment variable LPSOLVE_DIR to the lpsolve install location (the directory with lp_lib.h).

5. (optional) If you will be compiling the cfm-train and cfm-test executables, install a version of MPI, e.g. Mpich2.

6. Start the CMake GUI and set the source code location to the cfm directory (the directory with cfm-code, cfm-id...etc). Click Configure. A pop-up should appear asking you to select the generator. This code has been tested with VisualStudio 10 (using the free VisualStudio Express 2010 edition) so this is recommended. 

7. If you want to compile the cfm-train and cfm-test modules, click the INCLUDE_TRAIN and INCLUDE_TESTS checkboxes respectively. Otherwise make sure these are unchecked.

8. Once configration is complete, click Generate. This should generate the relevant project or makefiles. For Visual Studio, cfm.sln will be generated. Open this file in Visual Studio and build the INSTALL project. Any other generator, you're on your own!

9. This should produce the executable files in the cfm/bin directory.  Either add this directory to your path or start a command prompt in this directory. Run them from a command line as detailed on https://sourceforge.net/p/cfm-id/wiki/Home/.

COMPILING FOR LINUX
---------------------

1. Install CMake.

2. Install Boost (see www.boost.org). At minimum, include the filesystem, system and serialization modules. Set an environment variable BOOST_ROOT to the Boost install location.

3. Install RDKit (see http://rdkit.org/), including the InChI Extensions (python extensions are not required). Set the environment variable RDBASE to the RDKit install location (the directory with Code, lib etc..).

4. Download and unzip a development version of LPSolve (e.g. lp_solve_5.5.2.0_dev_ux64.tar.gz - see https://sourceforge.net/projects/lpsolve). Set the environment variable LPSOLVE_DIR to the lpsolve install location (the directory with lp_lib.h).

5. (optional) If you will be compiling the cfm-train and cfm-test executables, install a version of MPI.

6. Create a new directory where you want the build files to appear e.g. cfm/build and cd to this directory.

7. Run cmake CFM_LOC  where CFM_LOC is the location of the cfm directory e.g. if you are in cfm/build, you can use cmake ..

8. (optional) If you will be compiling the cfm-train and cfm-test executables, use 

cmake -D INCLUDE_TESTS=ON -D INCLUDE_TRAIN=ON CFM_LOC

9. make install

10. This should produce the executable files in the cfm/bin directory.  Change to this directory.

11. export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:RDBASE/lib:BOOST_ROOT/lib:LP_SOLVE_DIR

12. Run the programs from a command line as detailed on https://sourceforge.net/p/cfm-id/wiki/Home/

